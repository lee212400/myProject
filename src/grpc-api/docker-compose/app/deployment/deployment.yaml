apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: "my-api"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: myapp:local_07 # <- Minikube内部でbulidしたイメージ
          imagePullPolicy: Never
          ports:
            - containerPort: 50051  # gRPC
            - containerPort: 8080   # HTTP or grpc-gateway
          env:
            - name: MYSQL_DATABASE
              value: "mydb"
            - name: MYSQL_USER
              value: "user"
            - name: MYSQL_PASSWORD
              value: "password"
          command: ["/bin/sh", "-c", "./run.sh"]  
          resources:
              requests:
                memory: "100Mi"
              limits:
                memory: "200Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 30
          envFrom:
            - configMapRef:
                name: myapp-config
---
apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: "my-api"
spec:
  selector:
    app: myapp
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
    - name: http
      port: 8080
      targetPort: 8080
  type: NodePort